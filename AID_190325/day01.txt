密码：tarena

周运道
QQ：853473955
手机：15221728757
QQ群：816992855

教学环境：纯Ubuntu系统
虚拟机+Ubuntu系统 (内存>=8G)

Python方向
1、自动化(自动化运维、自动化测试)
2、Python开发(纯后端开发、web全栈开发)
3、爬虫工程师
4、数据分析(数学)
(数据挖掘工程师(偏业务30%)、数据分析工程师(偏业务60%))
5、人工智能(人工智能应用型工程师、人工智能算法工程师)


Python优缺点：
优点：
   简单、易学
   胶水语音  jpython/cpython  
   跨平台
   ...
缺点：
	与C语言相比 速率不够快

Python文件后缀名是 .py格式


python 解释器
Python 2.x
python 3.x
添加环境变量

下载一个编译器
vscode / sublime / pycharm


终端输入 python3  进入Python交互模式
Ctrl+Z/C 退出终端

pycharm中 python console 进入IPython交互模式
terminal 进入终端

在代码前加#进行代码注释(不在解释执行) 快捷键 Ctrl+/
Ctrl+d 复制上一行内容并粘贴
Ctrl+Z 回退


Python数据类型
1、数字类型
	整数型 int  1 2 3 4...
	浮点型 float 带小数点的数字类型都是浮点型 3.14  1.0
2、字符串类型  str
	带引号的数据类型
	单引号、双引号、三单引号、三双引号
	 ' '     "  "   '''  '''   """  """
	 一般情况下单引号和双引号无区别
	 只有在区分单双引号的时候才使用
	三引号：所见即所得、也可以充当文本注释使用
3、布尔类型 bool 
	True   1  正确
	False  0  错误
4、空值 None


print()函数 输出函数
print(value,value,...,sep=' ',end='\n')
sep:代表value值之间以sep的值作为分隔符，不写默认为空格
end:代表end这一行和下一行之间以end的值作为分隔符，不写默认为换行

input(“输入提示符:”)
input 输入的输出出来都是字符串格式


type() 查看数据类型


变量名=表达式  赋值(=)

a=1  b=3


算术运算
+ - * % 
/  除法得到的结果是浮点类型  
5/2  2.5
4/2  2.0
// 先除得到的结果舍弃小数部分向下取整
5//2  -->  5/2  2.5  --->2
-5//2  --> -5/2  -2.5  ---> -3

**  x**y  x的y次方  3**2  9

打开终端输入Python3 进行算术运算熟悉

练习 打印出
  *
 ***
*****

abs(x) 取x的绝对值
round(x,数字) 对x进行四舍五入，数字代表取小数点后多少位
如果数字为负数，则从小数点左边进行四舍五入

复合运算
a=a+b   a+=b
a=a-b   a-=b
a=a*b   a*=b
...

比较运算(返回布尔类型)
>  <  >=  <= !=(不等于)   ==(等于)  =(赋值)
3>2  True


判断语句
如果....就.... 否则.....

if 判断表达式:
	执行语句1
else:
	执行语句2
先对判断表达式进行判断如果为True则执行语句1，否则执行语句2
注意事项：
1、if语句后必须加英文冒号
2、执行语句和if或者else 有1个tab键的缩进或者4个英文空格
3、所以有字母都需要使用英文写


if 判断
if 判断表达式1:
	执行语句1
elif 判断表达式2:
	执行语句2
...
else:
	执行语句3


练习1
输入秒数N
从凌晨0：0：0 开始到现在过来N 秒，打印出现在是几时几分几秒
1时=60分=3600秒
1分=60秒
n秒
n//3600  小时
n%3600//60 分钟
n%60    秒数





练习2：(不允许使用and、or)
把12个月进行分类
12 1 2 冬季
3 4 5  春季
6 7 8 夏季
9 10 11 秋季

if 嵌套
语法：
if 判断语句1：
	if 判断语句2：
		执行语句2：
	elif 判断语句3：
		执行语句3
	...
	else：
		执行语句4
else:
	执行语句5


快捷键 选择tab键整体后移一个tab的空格
shift + tab 键整体前进一个tab的空格


字符串操作
运算符：
str +  相当于把字符串进行相拼接
"abc" + "123"  --->  "abc123"
str *  字符串和数字相乘,相当于数字被数的字符串相拼接
"abc" * 3  --->  "abcabcabc"
str +=
s="abc"  
s1="123"
s+=s1  "abc123"  --->s=s("abc")+s1("123")
str *=
s="abc"
s*=3  --->"abcabcabc"
字符串 只有加 乘法 

字符串比较
ASCII编码
0-9 48-57
A-Z 65-90
a-z 97-122

ord(单个字符) 返回单个字符所对应的ASCII编码上的数字
chr(数字) 返回数字在ASCII编码上所对应的字符

字符串比较
"A" < 'a'
'abc' > 'ABC'
字符串比较规则：
先第一个字符相比较，如果比出大小则大的字符串大，小的字符串小
如果第一个字符相等则继续比较第二个字符，规则同上
直到比出大小位置


字符串索引
语法：字符串[index] 返回index所对应的字符

索引：(返回单个元素)
从左到右从0开始依次加1
从右到左从-1开始依次减1

s="abcdef"
len(s)  #6
  a  b  c  d  e  f
  0  1  2  3  4  5
 -6 -5 -4 -3 -2 -1

s[2]  'c'
s[4]  'e'
s[0]  'a'  s[-len(s)]
s[5]  'f'  s[len(s)-1]

len() 返回序列的长度


字符串切片
语法：
字符串[开始索引:结束索引:步长]
包含开始索引，不包含结束索引
切片规则：
步长为正则从左到右切取，开始索引不写，默认为从0开始，
结束索引不写，默认为最后一个也能取到,步长不写，默认为1
从开始索引的左边下刀，结束索引的左边下刀

步长为负：从右到左切取
开始索引必须大于结束索引
开始索引不写，默认为-1，结束索引不写，默认为连第一个也能取到
步长不能不写
从开始索引的右边下刀、结束索引的右边下刀结束
s="abcdef"

s="abcdef"
  a  b  c  d  e  f
  0  1  2  3  4  5
 -6 -5 -4 -3 -2 -1
s[2]+s[3] 'cd'
s[2:4:1]  'cd'
'bd'  s[1:4:2]  s[-5:-2:2]
‘ace’  s[0:5:2]  s[:5:2]  s[::2]
'bdf'  s[1::2]
s[2:2]  #''



s="abcdef"
  a  b  c  d  e  f
  0  1  2  3  4  5
 -6 -5 -4 -3 -2 -1

s[-1:-4:-2]  'fd'
s[-3::-3]  'da'
s[::-1] 'fedcba'



练习：
1、输入年份判断是否是闰年(不使用and / or)
2、输入字符串判断是否为回文
回文：上海自来水来自海上、山西运煤车煤运西山
3、上海打的：
	3公里内18元 ，每超过1公里多加3.5元
	输入公里打印出需要支付多少？












 



打印出国际象棋盘
*#*#*#*#
#*#*#*#*
*#*#*#*#
#*#*#*#*
*#*#*#*#
#*#*#*#*
*#*#*#*#
#*#*#*#*





